[{"/Users/matthew/src/tweetonescreen/src/index.tsx":"1","/Users/matthew/src/tweetonescreen/src/reportWebVitals.ts":"2","/Users/matthew/src/tweetonescreen/src/App.tsx":"3","/Users/matthew/src/tweetonescreen/src/tweets.ts":"4","/Users/matthew/src/tweetonescreen/src/config.ts":"5"},{"size":500,"mtime":1612130035856,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1612130035856,"results":"8","hashOfConfig":"7"},{"size":999,"mtime":1612145408860,"results":"9","hashOfConfig":"7"},{"size":1432,"mtime":1612197614520,"results":"10","hashOfConfig":"7"},{"size":216,"mtime":1612197986965,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1e6lv1v",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matthew/src/tweetonescreen/src/index.tsx",[],["24","25"],"/Users/matthew/src/tweetonescreen/src/reportWebVitals.ts",[],"/Users/matthew/src/tweetonescreen/src/App.tsx",[],"/Users/matthew/src/tweetonescreen/src/tweets.ts",["26"],"import { useEffect, useState } from \"react\";\nimport { REFRESH_RATE } from \"./config\";\n\ntype List = \"jokes\" | \"friends\";\ntype Tweet = any;\nasync function fetchTweets(list: List) {\n  return fetch(`http://localhost:9000/twitter?list=${list}`).then(\n    async (response) => {\n      const tweets = await response.json();\n      return Object.values(tweets.tweets);\n    }\n  );\n}\n\nconst previousTweetsString = localStorage.getItem(\"tweets\");\nconst previousTweets = previousTweetsString && JSON.parse(previousTweetsString);\nconst DEFAULT_TWEETS = {\n  jokes: [],\n  friends: [],\n};\nexport const useTweets = () => {\n  const [tweets, setTweets] = useState(previousTweets || DEFAULT_TWEETS);\n\n  const updateTweets = (key: List, apiTweets: Tweet[]) => {\n    const newTweets = {\n      ...tweets,\n      [key]: [...apiTweets],\n    };\n    setTweets(newTweets);\n    localStorage.setItem(\"tweets\", JSON.stringify(newTweets));\n  };\n\n  useEffect(() => {\n    fetchTweets(\"jokes\").then((response) => updateTweets(\"jokes\", response));\n    fetchTweets(\"friends\").then((response) =>\n      updateTweets(\"friends\", response)\n    );\n\n    setInterval(() => {\n      fetchTweets(\"jokes\").then((response) => updateTweets(\"jokes\", response));\n      fetchTweets(\"friends\").then((response) =>\n        updateTweets(\"friends\", response)\n      );\n    }, REFRESH_RATE);\n  }, []);\n\n  console.log({ tweets });\n  return (list: List) => {\n    return tweets[list] || [];\n  };\n};\n","/Users/matthew/src/tweetonescreen/src/config.ts",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":45,"column":6,"nodeType":"33","endLine":45,"endColumn":8,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateTweets'. Either include it or remove the dependency array.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [updateTweets]",{"range":"40","text":"41"},[1333,1335],"[updateTweets]"]